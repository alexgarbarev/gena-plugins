{% include 'header' %}

#import <XCTest/XCTest.h>
#import <OCMock/OCMock.h>

#import "{{ prefix }}{{ module_name }}Presenter.h"

#import "{{ prefix }}{{ module_name }}ViewInput.h"
#import "{{ prefix }}{{ module_name }}InteractorInput.h"
#import "{{ prefix }}{{ module_name }}RouterInput.h"

@interface {{ prefix }}{{ module_name }}PresenterTests : XCTestCase

@property (nonatomic, strong) {{ prefix }}{{ module_name }}Presenter *presenter;

@property (nonatomic, strong) id mockInteractor;
@property (nonatomic, strong) id mockRouter;
@property (nonatomic, strong) id mockView;

@end

@implementation {{ prefix }}{{ module_name }}PresenterTests

//-------------------------------------------------------------------------------------------
#pragma mark - Setup
//-------------------------------------------------------------------------------------------

- (void)setUp 
{
    [super setUp];

    self.presenter = [[{{ prefix }}{{ module_name }}Presenter alloc] init];

    self.mockInteractor = OCMProtocolMock(@protocol({{ prefix }}{{ module_name }}InteractorInput));
    self.mockRouter = OCMProtocolMock(@protocol({{ prefix }}{{ module_name }}RouterInput));
    self.mockView = OCMProtocolMock(@protocol({{ prefix }}{{ module_name }}ViewInput));

    self.presenter.interactor = self.mockInteractor;
    self.presenter.router = self.mockRouter;
    self.presenter.view = self.mockView;
}

- (void)tearDown 
{
    self.presenter = nil;

    self.mockView = nil;
    self.mockRouter = nil;
    self.mockInteractor = nil;

    [super tearDown];
}

//-------------------------------------------------------------------------------------------
#pragma mark - Testing {{ prefix }}{{ module_name }}ModuleInput methods
//-------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------
#pragma mark - Testing {{ prefix }}{{ module_name }}ViewOutput methods
//-------------------------------------------------------------------------------------------

- (void)test_that_presenter_handles_viewReady_event 
{
    // given


    // when
    [self.presenter didTriggerViewReadyEvent];

    // then
    OCMVerify([self.mockView setupInitialState]);
}

//-------------------------------------------------------------------------------------------
#pragma mark - Testing {{ prefix }}{{ module_name }}InteractorOutput methods
//-------------------------------------------------------------------------------------------

@end
